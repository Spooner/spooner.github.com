begin
  require 'nanoc3/tasks'
rescue LoadError
  require 'rubygems'
  require 'nanoc3/tasks'
end

require 'date'

desc "Serve up the pages and auto-update them"
task :view do
  system "nanoc view"
end

desc "Automatically re-compile pages on change"
task :watch do
  system "nanoc watch"
end

desc "Compile everything"
task :compile  do
  system "nanoc compile"
end

desc "Delete everything, re-generate and recompile everything"
task recreate: ["clean", "create:years_and_months", "create:tags", :compile]  do
end

desc "Create content files for years and months everything"
task "create:years_and_months" do
  puts
  puts "** Generating year and month files"

  site = Nanoc3::Site.new('.')

  base_dir = File.dirname(__FILE__) + "/"

  articles_dir = File.expand_path('content/articles', base_dir)
  FileUtils.rmtree articles_dir if File.exists?(articles_dir)
  FileUtils.mkdir_p articles_dir

  site.items.each do |article|
    next unless article.article?
    year_filename = File.join(articles_dir, "#{article.year}/index.md")
    unless File.exists? year_filename
      FileUtils.mkdir_p File.dirname year_filename
      puts "Creating #{year_filename.sub(base_dir, '')}"
      File.open(year_filename, "w") do |file|
        file.write <<END
---
# Autogenerated - do not edit!
title: "#{article.year}"
layout: year
count_comments: true
---
END
      end
    end

    month_filename = File.join(articles_dir, "#{article.year}/#{article.month.to_s.rjust(2, "0")}.md")
    unless File.exists? month_filename
      FileUtils.mkdir_p File.dirname month_filename
      month_name = Date.new(2000, article.month, 1).strftime("%B")
      puts "Creating #{month_filename.sub(base_dir, '')} (#{month_name})"
      File.open(month_filename, "w") do |file|
        file.write <<END
---
# Autogenerated - do not edit!
title: #{month_name}
full_title: #{month_name} #{article.year}
layout: month
count_comments: true
---
END
      end
    end
  end

  puts
end

# http://www.h3rald.com/articles/take-back-your-site-with-nanoc/
desc "Create tag pages"
task "create:tags" do
  puts
  puts "** Generating tag files"

  site = Nanoc3::Site.new('.')
  dir = File.dirname(__FILE__)
  tags_dir = File.expand_path('content/tags', dir)
  FileUtils.rmtree tags_dir if File.exists?(tags_dir)
  FileUtils.mkdir_p tags_dir
  tags = Hash.new 0
  # Collect tag and page data
  site.items.each do |p|
    next unless p.attributes[:tags]
    p.attributes[:tags].each do |t|
      tags[t] += 1
    end
  end

  # Write pages
  tags.each_pair do |k, v|
    write_tag_page tags_dir, k, v
  end

  puts
end

def write_tag_page(tag_dir, tag, count)
  dir = File.dirname(__FILE__) + '/'
  tag_file = File.join(tag_dir, "#{tag}.md")
  puts "Created: #{tag_file.sub(dir, '')}"

  File.open(tag_file, "w") do |file|
    file.puts <<END
---
# Autogenerated - do not edit!
title: #{tag}
layout: tag
count: #{count}
count_comments: true
---
END
  end
end



