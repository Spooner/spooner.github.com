#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can't match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. "/about/" for the file
#   "content/about.html"). To select all children, grandchildren, ... of an
#   item, use the pattern "/about/*/"; "/about/*" will also select the parent,
#   because "*" matches zero or more characters.

compile '/*/feed/' do
  filter :erb
end

compile '/feed/' do
  filter :erb
end

compile '/sitemap/' do
  filter :erb
end

compile '/style/*/' do
  filter :sass, :syntax => :scss, :style => :compact
end

compile '*' do
  if item.binary?
    # don't filter binary items
  else
    case item[:extension]
      when 'md'
        filter :kramdown

        if item.kind
          layout item.kind
          snapshot :guts
        end

        layout 'default'

        if item.article?
          filter :colorize_syntax,
              colorizers: { ruby: :coderay }
        end

      when 'html.haml'
        filter :haml
        layout 'default'
    end
  end
end

# --------------------------------------------------

route '/blog/feed/' do
  '/blog/feed.xml'
end

route '/releases/feed/' do
  '/releases/feed.xml'
end

route '/feed/' do
  '/feed.xml'
end

route '/blog/_articles/*/' do
  item.identifier =~ %r[(\d{4})-(\d{2})-(\d{2})_(.+)/$]
  year, month, day, title = $1, $2, $3, $4

  # Ensure that the created_at is consistent with the name of the file.
  raise unless year.to_i == item.year
  raise unless month.to_i == item.month
  raise unless day.to_i == item.day

  "/blog/#{year}/#{month}/#{title}/index.html"
end

route '/sitemap/' do
  '/sitemap.xml'
end

route '/style/*/' do
  item.identifier.chop + '.css' # so that the /assets/style/screen/ item is compiled to /assets/style/screen.css
end

route "/errors/404/" do
  "/404.html"
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

# -----------------------------------
# Ugly is required, lest code blocks don't indent properly.
layout '*', :haml, format: :html5, ugly: true